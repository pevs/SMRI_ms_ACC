WARNING: unknown option '--max-mem-size=190G'


R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #!/usr/bin/env r
> 
> ### Annotate derfinder regions on cluster
> ### Alexis Norris
> ### Created: 2018-03-12
> 
> 
> ### Libraries
> library(derfinder)
'BiocParallel' did not register default BiocParallelParams:
  missing value where TRUE/FALSE needed
> library(GenomicRanges)
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, as.vector, cbind, colnames,
    do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl,
    intersect, is.unsorted, lapply, lengths, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unlist, unsplit

Loading required package: S4Vectors
Loading required package: stats4
Loading required package: IRanges
Loading required package: GenomeInfoDb
> library(magrittr)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:GenomicRanges’:

    intersect, setdiff, union

The following object is masked from ‘package:GenomeInfoDb’:

    intersect

The following objects are masked from ‘package:IRanges’:

    collapse, desc, intersect, setdiff, slice, union

The following objects are masked from ‘package:S4Vectors’:

    intersect, rename, setdiff, union

The following objects are masked from ‘package:BiocGenerics’:

    combine, intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> ### Dir paths
> REFS <- "/mnt/data/RNASeq/methods/references/hg19/"
> brain_region <- "PFC"
> 
> ### Load regions
> Sys.time()
[1] "2018-03-13 17:11:35 EDT"
> regionMat <- readRDS("regionMat_PFC_100bp.rds")
> Sys.time()
[1] "2018-03-13 17:11:48 EDT"
> 
> ### Extract regions from GRanges object 
> regions <- unlist(GRangesList(lapply(regionMat, "[[", "regions")))
> names(regions) <- paste0(seqnames(regions), ":", 
+                          start(regions), "-", 
+                          end(regions)) 
> 
> ### GeneMap: Check regions for overlapping genes
> geneMap <- readRDS(paste0(REFS, "GeneMap_Hsapiens.gencode.v19.GRCh37.rds"))
> geneMapGR <- GenomicRanges::makeGRangesFromDataFrame(
+   geneMap, 
+   keep.extra.columns = TRUE
+ )
> rm(geneMap)
> 
> Sys.time()
[1] "2018-03-13 17:12:06 EDT"
> dA <- GenomicRanges::distanceToNearest(regions, geneMapGR)
> Sys.time()
[1] "2018-03-13 17:12:09 EDT"
> regions$feature_name <- geneMapGR$gene_symbol[subjectHits(dA)]
> regions$gene_symbol<- geneMapGR$gene_symbol[subjectHits(dA)]
> regions$gene_type <- geneMapGR$gene_type[subjectHits(dA)]
> regions$gene_id <- geneMapGR$gene_id[subjectHits(dA)]
> regions$distToGene <- mcols(dA)$distance
> 
> ### GenomicState: Count number of region anno types
> gs <- readRDS(paste0(REFS, "GenomicState_Hsapiens.gencode.v19.GRCh37.p13.rds"))
> ensemblAnno <- derfinder::annotateRegions(regions, gs$fullGenome)
2018-03-13 17:12:17 annotateRegions: counting
2018-03-13 17:12:25 annotateRegions: annotating
> colSums(ensemblAnno$countTable)
      exon intergenic     intron 
    305338     158733    2050571 
> mcols(regions) <- cbind(mcols(regions), ensemblAnno$countTable)
> regions$anno_class <- NA
> regions$anno_class[regions$exon > 0 & 
+                      regions$intron == 0 & 
+                      regions$intergenic == 0] = "strictExonic"
> regions$anno_class[regions$exon == 0 & 
+                      regions$intron > 0 & 
+                      regions$intergenic == 0] = "strictIntronic"
> regions$anno_class[regions$exon == 0 & 
+                      regions$intron == 0 & 
+                      regions$intergenic > 0] = "strictIntergenic"
> regions$anno_class[regions$exon > 0 & 
+                      regions$intron > 0 & 
+                      regions$intergenic == 0] = "exonIntron"
> regions$anno_class[regions$exon > 0 & 
+                      regions$intergenic > 0] = "extendUTR"
> summary(factor(regions$anno_class))
      exonIntron        extendUTR     strictExonic strictIntergenic 
           88945             5019           193799           153513 
  strictIntronic 
         1838799 
> 
> ### Save bed
> rtracklayer::export(regions, 
+                     paste0("derfinder_", brain_region, "_ERs.bed"))
> 
> ### Extract featureData (annotation) from granges object
> class(regions)
[1] "GRanges"
attr(,"package")
[1] "GenomicRanges"
> head(regions)
GRanges object with 6 ranges and 15 metadata columns:
                   seqnames         ranges strand |     value         area
                      <Rle>      <IRanges>  <Rle> | <numeric>    <numeric>
  chr1:14367-15254     chr1 [14367, 15254]      * | 23.265174 20659.474138
  chr1:15348-15438     chr1 [15348, 15438]      * |  5.771789   525.232759
  chr1:15440-15440     chr1 [15440, 15440]      * |  5.034483     5.034483
  chr1:15453-15762     chr1 [15453, 15762]      * |  8.312597  2576.905172
  chr1:15796-15900     chr1 [15796, 15900]      * |  8.423645   884.482759
  chr1:15917-15947     chr1 [15917, 15947]      * |  7.705228   238.862069
                   indexStart  indexEnd cluster clusterL feature_name
                    <integer> <integer>   <Rle>    <Rle>     <factor>
  chr1:14367-15254          1       888       1     6270      DDX11L1
  chr1:15348-15438        889       979       1     6270       WASH7P
  chr1:15440-15440        980       980       1     6270       WASH7P
  chr1:15453-15762        981      1290       1     6270       WASH7P
  chr1:15796-15900       1291      1395       1     6270       WASH7P
  chr1:15917-15947       1396      1426       1     6270       WASH7P
                   gene_symbol  gene_type           gene_id distToGene
                      <factor>   <factor>          <factor>  <integer>
  chr1:14367-15254     DDX11L1 pseudogene ENSG00000223972.4          0
  chr1:15348-15438      WASH7P pseudogene ENSG00000227232.4          0
  chr1:15440-15440      WASH7P pseudogene ENSG00000227232.4          0
  chr1:15453-15762      WASH7P pseudogene ENSG00000227232.4          0
  chr1:15796-15900      WASH7P pseudogene ENSG00000227232.4          0
  chr1:15917-15947      WASH7P pseudogene ENSG00000227232.4          0
                        exon intergenic    intron     anno_class
                   <integer>  <integer> <integer>    <character>
  chr1:14367-15254         3          0         2     exonIntron
  chr1:15348-15438         0          0         1 strictIntronic
  chr1:15440-15440         0          0         1 strictIntronic
  chr1:15453-15762         0          0         1 strictIntronic
  chr1:15796-15900         1          0         0   strictExonic
  chr1:15917-15947         1          0         0   strictExonic
  -------
  seqinfo: 25 sequences from an unspecified genome
> head(as.data.frame(regions))
                 seqnames start   end width strand     value         area
chr1:14367-15254     chr1 14367 15254   888      * 23.265174 20659.474138
chr1:15348-15438     chr1 15348 15438    91      *  5.771789   525.232759
chr1:15440-15440     chr1 15440 15440     1      *  5.034483     5.034483
chr1:15453-15762     chr1 15453 15762   310      *  8.312597  2576.905172
chr1:15796-15900     chr1 15796 15900   105      *  8.423645   884.482759
chr1:15917-15947     chr1 15917 15947    31      *  7.705228   238.862069
                 indexStart indexEnd cluster clusterL feature_name gene_symbol
chr1:14367-15254          1      888       1     6270      DDX11L1     DDX11L1
chr1:15348-15438        889      979       1     6270       WASH7P      WASH7P
chr1:15440-15440        980      980       1     6270       WASH7P      WASH7P
chr1:15453-15762        981     1290       1     6270       WASH7P      WASH7P
chr1:15796-15900       1291     1395       1     6270       WASH7P      WASH7P
chr1:15917-15947       1396     1426       1     6270       WASH7P      WASH7P
                  gene_type           gene_id distToGene exon intergenic intron
chr1:14367-15254 pseudogene ENSG00000223972.4          0    3          0      2
chr1:15348-15438 pseudogene ENSG00000227232.4          0    0          0      1
chr1:15440-15440 pseudogene ENSG00000227232.4          0    0          0      1
chr1:15453-15762 pseudogene ENSG00000227232.4          0    0          0      1
chr1:15796-15900 pseudogene ENSG00000227232.4          0    1          0      0
chr1:15917-15947 pseudogene ENSG00000227232.4          0    1          0      0
                     anno_class
chr1:14367-15254     exonIntron
chr1:15348-15438 strictIntronic
chr1:15440-15440 strictIntronic
chr1:15453-15762 strictIntronic
chr1:15796-15900   strictExonic
chr1:15917-15947   strictExonic
> 
> features <- as.data.frame(regions) %>%
+   mutate(chr = seqnames) %>%
+   mutate(pos_hg19 = paste0(chr, ":", start, "-", end),
+          feature_id = paste0(chr, ":", start, "-", end)) %>% 
+   select(feature_id, feature_name, 
+          pos_hg19, chr, start, end, strand, 
+          gene_symbol, gene_type, gene_id, 
+          distToGene, anno_class)
> 
> ### Summarise strand
> summary(factor(features$strand))
      * 
2280075 
> 
> ### feature_id = Region (chr_:_-_) = pos_hg19 = rownames
> features <- as.data.frame(features)
> rownames(features) <- features$feature_id
> 
> ### Save
> Sys.time()
[1] "2018-03-13 17:12:47 EDT"
> saveRDS(features, paste0("features_", brain_region, "_regions.rds")) 
> 
> ### Done
> Sys.time()
[1] "2018-03-13 17:13:01 EDT"
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
510.547  53.501 573.969 
